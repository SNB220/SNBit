{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-r", "requirements.txt"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run SNBit Uploader",
            "type": "shell",
            "command": "python",
            "args": ["src/snbit_uploader.py"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "SNBit Uploader starting",
                    "endsPattern": "Press Ctrl\\+C to stop the server"
                }
            }
        },
        {
            "label": "Run on Custom Port",
            "type": "shell",
            "command": "python",
            "args": ["src/snbit_uploader.py"],
            "group": "build",
            "options": {
                "env": {
                    "SNBIT_PORT": "3000"
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Lint Code",
            "type": "shell",
            "command": "python",
            "args": ["-m", "flake8", "src/", "--max-line-length=100"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\w+)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "Security Check",
            "type": "shell",
            "command": "python",
            "args": ["-m", "bandit", "-r", "src/"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Uploads",
            "type": "shell",
            "command": "python",
            "args": ["-c", "import os, shutil; [os.remove(os.path.join('uploads', f)) for f in os.listdir('uploads') if os.path.isfile(os.path.join('uploads', f)) and f != '.gitkeep']; print('âœ… Uploads folder cleaned')"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        }
    ]
}
